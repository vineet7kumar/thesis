\BOOKMARK [0][-]{chapter.I}{Abstract}{}% 1
\BOOKMARK [0][-]{chapter.II}{R\351sum\351}{}% 2
\BOOKMARK [0][-]{chapter.III}{Acknowledgements}{}% 3
\BOOKMARK [0][-]{chapter.IV}{Table of Contents}{}% 4
\BOOKMARK [0][-]{chapter.V}{List of Figures}{}% 5
\BOOKMARK [0][-]{chapter.VI}{List of Tables}{}% 6
\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 7
\BOOKMARK [1][-]{section.1.1}{Contributions}{chapter.1}% 8
\BOOKMARK [1][-]{section.1.2}{Thesis Outline}{chapter.1}% 9
\BOOKMARK [0][-]{chapter.2}{Introduction to X10 programming language}{}% 10
\BOOKMARK [1][-]{section.2.1}{Overview of X10's key sequential features}{chapter.2}% 11
\BOOKMARK [2][-]{subsection.2.1.1}{Object-oriented features}{section.2.1}% 12
\BOOKMARK [2][-]{subsection.2.1.2}{Statements}{section.2.1}% 13
\BOOKMARK [2][-]{subsection.2.1.3}{Arrays}{section.2.1}% 14
\BOOKMARK [2][-]{subsection.2.1.4}{Types}{section.2.1}% 15
\BOOKMARK [1][-]{section.2.2}{Overview of X10's concurrency features}{chapter.2}% 16
\BOOKMARK [2][-]{subsection.2.2.1}{Async}{section.2.2}% 17
\BOOKMARK [2][-]{subsection.2.2.2}{Finish}{section.2.2}% 18
\BOOKMARK [2][-]{subsection.2.2.3}{Atomic}{section.2.2}% 19
\BOOKMARK [2][-]{subsection.2.2.4}{At}{section.2.2}% 20
\BOOKMARK [1][-]{section.2.3}{Overview of X10's implementation and runtime}{chapter.2}% 21
\BOOKMARK [2][-]{subsection.2.3.1}{X10 implementation}{section.2.3}% 22
\BOOKMARK [2][-]{subsection.2.3.2}{X10 runtime}{section.2.3}% 23
\BOOKMARK [1][-]{section.2.4}{Summary}{chapter.2}% 24
\BOOKMARK [0][-]{chapter.3}{Background and High level design}{}% 25
\BOOKMARK [1][-]{section.3.1}{Background}{chapter.3}% 26
\BOOKMARK [1][-]{section.3.2}{High level design of the MiX10 compiler}{chapter.3}% 27
\BOOKMARK [2][-]{subsection.3.2.1}{the MiX10 intermediate representation}{section.3.2}% 28
\BOOKMARK [0][-]{chapter.4}{Techniques for efficient compilation of Matlab arrays}{}% 29
\BOOKMARK [1][-]{section.4.1}{Simple Arrays or Region Arrays}{chapter.4}% 30
\BOOKMARK [2][-]{subsection.4.1.1}{Compilation to Simple arrays}{section.4.1}% 31
\BOOKMARK [2][-]{subsection.4.1.2}{Compilation to Region Arays}{section.4.1}% 32
\BOOKMARK [1][-]{section.4.2}{Handling the colon expression}{chapter.4}% 33
\BOOKMARK [1][-]{section.4.3}{Array growth}{chapter.4}% 34
\BOOKMARK [0][-]{chapter.5}{Handling Matlab builtins}{}% 35
\BOOKMARK [1][-]{subsection.5.0.1}{MiX10 builtin support framework}{chapter.5}% 36
\BOOKMARK [0][-]{chapter.6}{Code generation for the sequential core}{}% 37
\BOOKMARK [1][-]{section.6.1}{Methods}{chapter.6}% 38
\BOOKMARK [1][-]{section.6.2}{Types, Assignments and Declarations}{chapter.6}% 39
\BOOKMARK [1][-]{section.6.3}{Loops}{chapter.6}% 40
\BOOKMARK [1][-]{section.6.4}{Conditionals}{chapter.6}% 41
\BOOKMARK [1][-]{section.6.5}{Array access and Colon operator}{chapter.6}% 42
\BOOKMARK [1][-]{section.6.6}{Function calls}{chapter.6}% 43
\BOOKMARK [1][-]{section.6.7}{Cell Arrays}{chapter.6}% 44
\BOOKMARK [0][-]{chapter.7}{Code generation for concurrency in Matlab}{}% 45
\BOOKMARK [1][-]{section.7.1}{Code generation for the Matlab parfor loop construct}{chapter.7}% 46
\BOOKMARK [1][-]{section.7.2}{Introducing concurrency controls in Matlab}{chapter.7}% 47
\BOOKMARK [1][-]{section.7.3}{parallelizing vectorized instructions:}{chapter.7}% 48
\BOOKMARK [0][-]{chapter.8}{Static analyses for performance and extended feature support}{}% 49
\BOOKMARK [1][-]{section.8.1}{Safely using integer variables: IntegerOkay Analysis}{chapter.8}% 50
\BOOKMARK [2][-]{subsection.8.1.1}{Need for declaring variables to be of integer type}{section.8.1}% 51
\BOOKMARK [2][-]{subsection.8.1.2}{Effect on performance}{section.8.1}% 52
\BOOKMARK [2][-]{subsection.8.1.3}{An overview of the IntegerOkay Analysis}{section.8.1}% 53
\BOOKMARK [2][-]{subsection.8.1.4}{The analysis}{section.8.1}% 54
\BOOKMARK [2][-]{subsection.8.1.5}{An example}{section.8.1}% 55
\BOOKMARK [0][-]{chapter.9}{Evaluation}{}% 56
\BOOKMARK [1][-]{section.9.1}{Benchmarks}{chapter.9}% 57
\BOOKMARK [1][-]{section.9.2}{Experimental setup}{chapter.9}% 58
\BOOKMARK [1][-]{section.9.3}{X10 Compiler variations}{chapter.9}% 59
\BOOKMARK [1][-]{section.9.4}{Overall MiX10 performance}{chapter.9}% 60
\BOOKMARK [1][-]{section.9.5}{X10 C++ backend vs. X10 Java backend}{chapter.9}% 61
\BOOKMARK [2][-]{subsection.9.5.1}{When not to use the X10-O}{section.9.5}% 62
\BOOKMARK [1][-]{section.9.6}{Simple vs. Region arrays}{chapter.9}% 63
\BOOKMARK [1][-]{section.9.7}{Effect of IntegerOkay analysis}{chapter.9}% 64
\BOOKMARK [1][-]{section.9.8}{Matlab parfor vs. MiX10 parallel code}{chapter.9}% 65
\BOOKMARK [1][-]{section.9.9}{Conclusion}{chapter.9}% 66
\BOOKMARK [0][-]{chapter.10}{Related work}{}% 67
\BOOKMARK [0][-]{chapter.11}{Conclusions and Future Work}{}% 68
\BOOKMARK [0][-]{appendix.A}{XML structure for builtin framework}{}% 69
\BOOKMARK [0][-]{appendix.B}{isComplex analysis Propagation Language}{}% 70
\BOOKMARK [0][-]{appendix.C}{MiX10 IR Grammar}{}% 71
\BOOKMARK [0][-]{appendix.D}{Bibliography}{}% 72
