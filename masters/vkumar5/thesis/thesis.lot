\select@language {english}
\select@language {english}
\select@language {english}
\select@language {french}
\select@language {french}
\select@language {french}
\select@language {english}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {table}{\numberline {8.1}{\ignorespaces Running times (in seconds) for listings \ref {lst:dbl_lng_tc} and \ref {lst:dbl_lng_notc}, smaller is better\relax }}{59}{table.caption.12}
\contentsline {table}{\numberline {8.2}{\ignorespaces Definition of the $\bowtie $ merge operator\relax }}{65}{table.caption.13}
\addvspace {10\p@ }
\contentsline {table}{\numberline {9.1}{\ignorespaces Benchmarks\relax }}{71}{table.caption.14}
\contentsline {table}{\numberline {9.2}{\ignorespaces {\sc MiX10}\xspace performance comparison : {\sc X10}\xspace C++ backend vs. {\sc X10}\xspace Java backend, speedups relative to Mathworks' {\sc Matlab}\xspace , higher is better\relax }}{76}{table.caption.16}
\contentsline {table}{\numberline {9.3}{\ignorespaces {\sc MiX10}\xspace performance comparison : Simple arrays vs. Region arrays vs. Specialized region arrays, speedup relative to Mathworks' {\sc Matlab}\xspace , higher is better\relax }}{78}{table.caption.17}
\contentsline {table}{\numberline {9.4}{\ignorespaces Performance evaluation for the IntegerOkay analysis, speedups relative to Mathworks' {\sc Matlab}\xspace , higher is better\relax }}{80}{table.caption.18}
\contentsline {table}{\numberline {9.5}{\ignorespaces Performance evaluation for {\sc MiX10}\xspace generated parallel {\sc X10}\xspace code for the {\sc Matlab}\xspace \texttt {parfor} construct, speedups relative to Mathworks' {\sc Matlab}\xspace , higher is better\relax }}{81}{table.caption.19}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
